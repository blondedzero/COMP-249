package P3;
import P2.Helicopter;

public class Multirotor extends Helicopter{
	
	//multirotor attribute
	private int numberOfRotors;
	
	//default constructor
	public Multirotor() {
	this.numberOfRotors = 6;
	}	
	
	//parameterized constructor
	public Multirotor(String brand, double price, int horsePower, int numberOfCylinders, int creationYear, int passengerCapacity, int numberOfRotors) {
		super(brand, price, horsePower, numberOfCylinders, creationYear, passengerCapacity);
		this.numberOfRotors = numberOfRotors;
	}

	//copy constructor
	public Multirotor(Multirotor copy) {
		this(copy.brand, copy.price, copy.horsePower, copy.numberOfCylinders, copy.creationYear, copy.passengerCapacity, copy.numberOfRotors);
	}
	
	//getter
	public int getNumberOfRotors() {
	return this.numberOfRotors;
	}
	
	//setter
	public int setNumberOfRotors() {
	return this.numberOfRotors;
	}
	
	//toString
    @Override
    public String toString() {
		return "This is a " + this.brand + " multirotor aircraft. It has " + this.numberOfRotors + " rotors and it is priced at $" + this.price + 
				". Its engine can produce " + this.horsePower + " horse power and has " + this.numberOfCylinders + " cylinders. The model was manufactured in "
				+ this.creationYear + " and it can hold up to " + this.passengerCapacity +" passengers.";	
    }
    
	//equals
	@Override
	public boolean equals(Object x)
	{
		if (x == null || this.getClass() != x.getClass())
			return false;
			// cast the passed object to a Helicopter object
			Multirotor m = (Multirotor)x;
			return (this.brand == m.brand && this.price == m.price && this.horsePower == m.horsePower 
					&& this.numberOfCylinders == m.numberOfCylinders && this.creationYear == m.creationYear
					&& this.passengerCapacity == m.passengerCapacity && this.numberOfRotors == m.numberOfRotors);
		}

}
